generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("PRISMA_CLIENT_DIRECT_DB_URL") // Direct URL without PgBouncer for Prisma Migrate
}

model MapLocation {
  id   Int   @id @default(autoincrement())
  lat  Float
  lng  Float
  pubs Pub[]
}

model Rules {
  id                   Int    @id @default(autoincrement())
  isCueDeposit         String
  isJumpingAllowed     String
  isPoundOnTable       String
  isReservationAllowed String
  pubs                 Pub[]
}

model Table {
  id          Int     @id @default(autoincrement())
  size        String?
  quality     String?
  cost        Float?
  description String?
  pub         Pub     @relation(fields: [pubId], references: [id])
  pubId       Int
}

model PubInformation {
  id               Int      @id @default(autoincrement())
  numberOfTables   Int?
  tableQuality     String?
  tableCost        Float?
  cueQuality       String?
  hasChalk         String?
  wheelchairAccess String?
  kidsFriendly     String?
  pubs             Pub[]
}

model Pub {
  id                     Int             @id @default(autoincrement())
  name                   String
  address                String
  locationId             Int
  location               MapLocation     @relation(fields: [locationId], references: [id])
  rulesId                Int
  rules                  Rules           @relation(fields: [rulesId], references: [id])
  tables                 Table[]
  comments               Comment[]
  informationId          Int?            @unique
  createdBy              String
  updatedBy              String[]
  isRequiresManualReview Boolean         @default(false)
  pubInformationId       Int?
  pubInformation         PubInformation? @relation(fields: [pubInformationId], references: [id])
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  author    String
  pubId     Int
  pub       Pub      @relation(fields: [pubId], references: [id])
  createdAt DateTime @default(now())
}

model User {
  id    Int    @id @default(autoincrement())
  name  String
  email String @unique
}

model Admin {
  id     Int @id @default(autoincrement())
  userId Int @unique
}
